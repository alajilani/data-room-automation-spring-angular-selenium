{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\n\nclass Draggable {\n  constructor(el, zone) {\n    this.el = el;\n    this.zone = zone;\n    this.onDragStart = new EventEmitter();\n    this.onDragEnd = new EventEmitter();\n    this.onDrag = new EventEmitter();\n  }\n\n  get pDraggableDisabled() {\n    return this._pDraggableDisabled;\n  }\n\n  set pDraggableDisabled(_pDraggableDisabled) {\n    this._pDraggableDisabled = _pDraggableDisabled;\n\n    if (this._pDraggableDisabled) {\n      this.unbindMouseListeners();\n    } else {\n      this.el.nativeElement.draggable = true;\n      this.bindMouseListeners();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (!this.pDraggableDisabled) {\n      this.el.nativeElement.draggable = true;\n      this.bindMouseListeners();\n    }\n  }\n\n  bindDragListener() {\n    if (!this.dragListener) {\n      this.zone.runOutsideAngular(() => {\n        this.dragListener = this.drag.bind(this);\n        this.el.nativeElement.addEventListener('drag', this.dragListener);\n      });\n    }\n  }\n\n  unbindDragListener() {\n    if (this.dragListener) {\n      this.zone.runOutsideAngular(() => {\n        this.el.nativeElement.removeEventListener('drag', this.dragListener);\n        this.dragListener = null;\n      });\n    }\n  }\n\n  bindMouseListeners() {\n    if (!this.mouseDownListener && !this.mouseUpListener) {\n      this.zone.runOutsideAngular(() => {\n        this.mouseDownListener = this.mousedown.bind(this);\n        this.mouseUpListener = this.mouseup.bind(this);\n        this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n        this.el.nativeElement.addEventListener('mouseup', this.mouseUpListener);\n      });\n    }\n  }\n\n  unbindMouseListeners() {\n    if (this.mouseDownListener && this.mouseUpListener) {\n      this.zone.runOutsideAngular(() => {\n        this.el.nativeElement.removeEventListener('mousedown', this.mouseDownListener);\n        this.el.nativeElement.removeEventListener('mouseup', this.mouseUpListener);\n        this.mouseDownListener = null;\n        this.mouseUpListener = null;\n      });\n    }\n  }\n\n  drag(event) {\n    this.onDrag.emit(event);\n  }\n\n  dragStart(event) {\n    if (this.allowDrag() && !this.pDraggableDisabled) {\n      if (this.dragEffect) {\n        event.dataTransfer.effectAllowed = this.dragEffect;\n      }\n\n      event.dataTransfer.setData('text', this.scope);\n      this.onDragStart.emit(event);\n      this.bindDragListener();\n    } else {\n      event.preventDefault();\n    }\n  }\n\n  dragEnd(event) {\n    this.onDragEnd.emit(event);\n    this.unbindDragListener();\n  }\n\n  mousedown(event) {\n    this.handle = event.target;\n  }\n\n  mouseup(event) {\n    this.handle = null;\n  }\n\n  allowDrag() {\n    if (this.dragHandle && this.handle) return DomHandler.matches(this.handle, this.dragHandle);else return true;\n  }\n\n  ngOnDestroy() {\n    this.unbindDragListener();\n    this.unbindMouseListeners();\n  }\n\n}\n\nDraggable.ɵfac = function Draggable_Factory(t) {\n  return new (t || Draggable)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nDraggable.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: Draggable,\n  selectors: [[\"\", \"pDraggable\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostBindings: function Draggable_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"dragstart\", function Draggable_dragstart_HostBindingHandler($event) {\n        return ctx.dragStart($event);\n      })(\"dragend\", function Draggable_dragend_HostBindingHandler($event) {\n        return ctx.dragEnd($event);\n      });\n    }\n  },\n  inputs: {\n    scope: [\"pDraggable\", \"scope\"],\n    dragEffect: \"dragEffect\",\n    dragHandle: \"dragHandle\",\n    pDraggableDisabled: \"pDraggableDisabled\"\n  },\n  outputs: {\n    onDragStart: \"onDragStart\",\n    onDragEnd: \"onDragEnd\",\n    onDrag: \"onDrag\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Draggable, [{\n    type: Directive,\n    args: [{\n      selector: '[pDraggable]',\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    scope: [{\n      type: Input,\n      args: ['pDraggable']\n    }],\n    dragEffect: [{\n      type: Input\n    }],\n    dragHandle: [{\n      type: Input\n    }],\n    onDragStart: [{\n      type: Output\n    }],\n    onDragEnd: [{\n      type: Output\n    }],\n    onDrag: [{\n      type: Output\n    }],\n    pDraggableDisabled: [{\n      type: Input\n    }],\n    dragStart: [{\n      type: HostListener,\n      args: ['dragstart', ['$event']]\n    }],\n    dragEnd: [{\n      type: HostListener,\n      args: ['dragend', ['$event']]\n    }]\n  });\n})();\n\nclass Droppable {\n  constructor(el, zone) {\n    this.el = el;\n    this.zone = zone;\n    this.onDragEnter = new EventEmitter();\n    this.onDragLeave = new EventEmitter();\n    this.onDrop = new EventEmitter();\n  }\n\n  ngAfterViewInit() {\n    if (!this.pDroppableDisabled) {\n      this.bindDragOverListener();\n    }\n  }\n\n  bindDragOverListener() {\n    if (!this.dragOverListener) {\n      this.zone.runOutsideAngular(() => {\n        this.dragOverListener = this.dragOver.bind(this);\n        this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n      });\n    }\n  }\n\n  unbindDragOverListener() {\n    if (this.dragOverListener) {\n      this.zone.runOutsideAngular(() => {\n        this.el.nativeElement.removeEventListener('dragover', this.dragOverListener);\n        this.dragOverListener = null;\n      });\n    }\n  }\n\n  dragOver(event) {\n    event.preventDefault();\n  }\n\n  drop(event) {\n    if (this.allowDrop(event)) {\n      DomHandler.removeClass(this.el.nativeElement, 'p-draggable-enter');\n      event.preventDefault();\n      this.onDrop.emit(event);\n    }\n  }\n\n  dragEnter(event) {\n    event.preventDefault();\n\n    if (this.dropEffect) {\n      event.dataTransfer.dropEffect = this.dropEffect;\n    }\n\n    DomHandler.addClass(this.el.nativeElement, 'p-draggable-enter');\n    this.onDragEnter.emit(event);\n  }\n\n  dragLeave(event) {\n    event.preventDefault();\n    DomHandler.removeClass(this.el.nativeElement, 'p-draggable-enter');\n    this.onDragLeave.emit(event);\n  }\n\n  allowDrop(event) {\n    let dragScope = event.dataTransfer.getData('text');\n\n    if (typeof this.scope == \"string\" && dragScope == this.scope) {\n      return true;\n    } else if (this.scope instanceof Array) {\n      for (let j = 0; j < this.scope.length; j++) {\n        if (dragScope == this.scope[j]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  ngOnDestroy() {\n    this.unbindDragOverListener();\n  }\n\n}\n\nDroppable.ɵfac = function Droppable_Factory(t) {\n  return new (t || Droppable)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nDroppable.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: Droppable,\n  selectors: [[\"\", \"pDroppable\", \"\"]],\n  hostAttrs: [1, \"p-element\"],\n  hostBindings: function Droppable_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"drop\", function Droppable_drop_HostBindingHandler($event) {\n        return ctx.drop($event);\n      })(\"dragenter\", function Droppable_dragenter_HostBindingHandler($event) {\n        return ctx.dragEnter($event);\n      })(\"dragleave\", function Droppable_dragleave_HostBindingHandler($event) {\n        return ctx.dragLeave($event);\n      });\n    }\n  },\n  inputs: {\n    scope: [\"pDroppable\", \"scope\"],\n    pDroppableDisabled: \"pDroppableDisabled\",\n    dropEffect: \"dropEffect\"\n  },\n  outputs: {\n    onDragEnter: \"onDragEnter\",\n    onDragLeave: \"onDragLeave\",\n    onDrop: \"onDrop\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Droppable, [{\n    type: Directive,\n    args: [{\n      selector: '[pDroppable]',\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    scope: [{\n      type: Input,\n      args: ['pDroppable']\n    }],\n    pDroppableDisabled: [{\n      type: Input\n    }],\n    dropEffect: [{\n      type: Input\n    }],\n    onDragEnter: [{\n      type: Output\n    }],\n    onDragLeave: [{\n      type: Output\n    }],\n    onDrop: [{\n      type: Output\n    }],\n    drop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }],\n    dragEnter: [{\n      type: HostListener,\n      args: ['dragenter', ['$event']]\n    }],\n    dragLeave: [{\n      type: HostListener,\n      args: ['dragleave', ['$event']]\n    }]\n  });\n})();\n\nclass DragDropModule {}\n\nDragDropModule.ɵfac = function DragDropModule_Factory(t) {\n  return new (t || DragDropModule)();\n};\n\nDragDropModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: DragDropModule\n});\nDragDropModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragDropModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [Draggable, Droppable],\n      declarations: [Draggable, Droppable]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DragDropModule, Draggable, Droppable };","map":{"version":3,"sources":["/home/hassine/quest-automated-tests/robot/frontend/robot/node_modules/primeng/fesm2015/primeng-dragdrop.mjs"],"names":["i0","EventEmitter","Directive","Input","Output","HostListener","NgModule","CommonModule","DomHandler","Draggable","constructor","el","zone","onDragStart","onDragEnd","onDrag","pDraggableDisabled","_pDraggableDisabled","unbindMouseListeners","nativeElement","draggable","bindMouseListeners","ngAfterViewInit","bindDragListener","dragListener","runOutsideAngular","drag","bind","addEventListener","unbindDragListener","removeEventListener","mouseDownListener","mouseUpListener","mousedown","mouseup","event","emit","dragStart","allowDrag","dragEffect","dataTransfer","effectAllowed","setData","scope","preventDefault","dragEnd","handle","target","dragHandle","matches","ngOnDestroy","ɵfac","ElementRef","NgZone","ɵdir","type","args","selector","host","Droppable","onDragEnter","onDragLeave","onDrop","pDroppableDisabled","bindDragOverListener","dragOverListener","dragOver","unbindDragOverListener","drop","allowDrop","removeClass","dragEnter","dropEffect","addClass","dragLeave","dragScope","getData","Array","j","length","DragDropModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\n\nclass Draggable {\n    constructor(el, zone) {\n        this.el = el;\n        this.zone = zone;\n        this.onDragStart = new EventEmitter();\n        this.onDragEnd = new EventEmitter();\n        this.onDrag = new EventEmitter();\n    }\n    get pDraggableDisabled() {\n        return this._pDraggableDisabled;\n    }\n    set pDraggableDisabled(_pDraggableDisabled) {\n        this._pDraggableDisabled = _pDraggableDisabled;\n        if (this._pDraggableDisabled) {\n            this.unbindMouseListeners();\n        }\n        else {\n            this.el.nativeElement.draggable = true;\n            this.bindMouseListeners();\n        }\n    }\n    ngAfterViewInit() {\n        if (!this.pDraggableDisabled) {\n            this.el.nativeElement.draggable = true;\n            this.bindMouseListeners();\n        }\n    }\n    bindDragListener() {\n        if (!this.dragListener) {\n            this.zone.runOutsideAngular(() => {\n                this.dragListener = this.drag.bind(this);\n                this.el.nativeElement.addEventListener('drag', this.dragListener);\n            });\n        }\n    }\n    unbindDragListener() {\n        if (this.dragListener) {\n            this.zone.runOutsideAngular(() => {\n                this.el.nativeElement.removeEventListener('drag', this.dragListener);\n                this.dragListener = null;\n            });\n        }\n    }\n    bindMouseListeners() {\n        if (!this.mouseDownListener && !this.mouseUpListener) {\n            this.zone.runOutsideAngular(() => {\n                this.mouseDownListener = this.mousedown.bind(this);\n                this.mouseUpListener = this.mouseup.bind(this);\n                this.el.nativeElement.addEventListener('mousedown', this.mouseDownListener);\n                this.el.nativeElement.addEventListener('mouseup', this.mouseUpListener);\n            });\n        }\n    }\n    unbindMouseListeners() {\n        if (this.mouseDownListener && this.mouseUpListener) {\n            this.zone.runOutsideAngular(() => {\n                this.el.nativeElement.removeEventListener('mousedown', this.mouseDownListener);\n                this.el.nativeElement.removeEventListener('mouseup', this.mouseUpListener);\n                this.mouseDownListener = null;\n                this.mouseUpListener = null;\n            });\n        }\n    }\n    drag(event) {\n        this.onDrag.emit(event);\n    }\n    dragStart(event) {\n        if (this.allowDrag() && !this.pDraggableDisabled) {\n            if (this.dragEffect) {\n                event.dataTransfer.effectAllowed = this.dragEffect;\n            }\n            event.dataTransfer.setData('text', this.scope);\n            this.onDragStart.emit(event);\n            this.bindDragListener();\n        }\n        else {\n            event.preventDefault();\n        }\n    }\n    dragEnd(event) {\n        this.onDragEnd.emit(event);\n        this.unbindDragListener();\n    }\n    mousedown(event) {\n        this.handle = event.target;\n    }\n    mouseup(event) {\n        this.handle = null;\n    }\n    allowDrag() {\n        if (this.dragHandle && this.handle)\n            return DomHandler.matches(this.handle, this.dragHandle);\n        else\n            return true;\n    }\n    ngOnDestroy() {\n        this.unbindDragListener();\n        this.unbindMouseListeners();\n    }\n}\nDraggable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: Draggable, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nDraggable.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.7\", type: Draggable, selector: \"[pDraggable]\", inputs: { scope: [\"pDraggable\", \"scope\"], dragEffect: \"dragEffect\", dragHandle: \"dragHandle\", pDraggableDisabled: \"pDraggableDisabled\" }, outputs: { onDragStart: \"onDragStart\", onDragEnd: \"onDragEnd\", onDrag: \"onDrag\" }, host: { listeners: { \"dragstart\": \"dragStart($event)\", \"dragend\": \"dragEnd($event)\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: Draggable, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pDraggable]',\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { scope: [{\n                type: Input,\n                args: ['pDraggable']\n            }], dragEffect: [{\n                type: Input\n            }], dragHandle: [{\n                type: Input\n            }], onDragStart: [{\n                type: Output\n            }], onDragEnd: [{\n                type: Output\n            }], onDrag: [{\n                type: Output\n            }], pDraggableDisabled: [{\n                type: Input\n            }], dragStart: [{\n                type: HostListener,\n                args: ['dragstart', ['$event']]\n            }], dragEnd: [{\n                type: HostListener,\n                args: ['dragend', ['$event']]\n            }] } });\nclass Droppable {\n    constructor(el, zone) {\n        this.el = el;\n        this.zone = zone;\n        this.onDragEnter = new EventEmitter();\n        this.onDragLeave = new EventEmitter();\n        this.onDrop = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        if (!this.pDroppableDisabled) {\n            this.bindDragOverListener();\n        }\n    }\n    bindDragOverListener() {\n        if (!this.dragOverListener) {\n            this.zone.runOutsideAngular(() => {\n                this.dragOverListener = this.dragOver.bind(this);\n                this.el.nativeElement.addEventListener('dragover', this.dragOverListener);\n            });\n        }\n    }\n    unbindDragOverListener() {\n        if (this.dragOverListener) {\n            this.zone.runOutsideAngular(() => {\n                this.el.nativeElement.removeEventListener('dragover', this.dragOverListener);\n                this.dragOverListener = null;\n            });\n        }\n    }\n    dragOver(event) {\n        event.preventDefault();\n    }\n    drop(event) {\n        if (this.allowDrop(event)) {\n            DomHandler.removeClass(this.el.nativeElement, 'p-draggable-enter');\n            event.preventDefault();\n            this.onDrop.emit(event);\n        }\n    }\n    dragEnter(event) {\n        event.preventDefault();\n        if (this.dropEffect) {\n            event.dataTransfer.dropEffect = this.dropEffect;\n        }\n        DomHandler.addClass(this.el.nativeElement, 'p-draggable-enter');\n        this.onDragEnter.emit(event);\n    }\n    dragLeave(event) {\n        event.preventDefault();\n        DomHandler.removeClass(this.el.nativeElement, 'p-draggable-enter');\n        this.onDragLeave.emit(event);\n    }\n    allowDrop(event) {\n        let dragScope = event.dataTransfer.getData('text');\n        if (typeof (this.scope) == \"string\" && dragScope == this.scope) {\n            return true;\n        }\n        else if (this.scope instanceof Array) {\n            for (let j = 0; j < this.scope.length; j++) {\n                if (dragScope == this.scope[j]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    ngOnDestroy() {\n        this.unbindDragOverListener();\n    }\n}\nDroppable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: Droppable, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nDroppable.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.7\", type: Droppable, selector: \"[pDroppable]\", inputs: { scope: [\"pDroppable\", \"scope\"], pDroppableDisabled: \"pDroppableDisabled\", dropEffect: \"dropEffect\" }, outputs: { onDragEnter: \"onDragEnter\", onDragLeave: \"onDragLeave\", onDrop: \"onDrop\" }, host: { listeners: { \"drop\": \"drop($event)\", \"dragenter\": \"dragEnter($event)\", \"dragleave\": \"dragLeave($event)\" }, classAttribute: \"p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: Droppable, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pDroppable]',\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { scope: [{\n                type: Input,\n                args: ['pDroppable']\n            }], pDroppableDisabled: [{\n                type: Input\n            }], dropEffect: [{\n                type: Input\n            }], onDragEnter: [{\n                type: Output\n            }], onDragLeave: [{\n                type: Output\n            }], onDrop: [{\n                type: Output\n            }], drop: [{\n                type: HostListener,\n                args: ['drop', ['$event']]\n            }], dragEnter: [{\n                type: HostListener,\n                args: ['dragenter', ['$event']]\n            }], dragLeave: [{\n                type: HostListener,\n                args: ['dragleave', ['$event']]\n            }] } });\nclass DragDropModule {\n}\nDragDropModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDragDropModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: DragDropModule, declarations: [Draggable, Droppable], imports: [CommonModule], exports: [Draggable, Droppable] });\nDragDropModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: DragDropModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [Draggable, Droppable],\n                    declarations: [Draggable, Droppable]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DragDropModule, Draggable, Droppable };\n"]},"metadata":{},"sourceType":"module"}